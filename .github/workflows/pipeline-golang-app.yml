name: pipeline
on:
  workflow_call:
    inputs:
      imageTagName:
        required: true
        type: string
      useTask:
        required: false
        type: boolean
        default: false
      coverageThresholdFile:
        required: false
        type: number
        default: 80
      coverageThresholdPackage:
        required: false
        type: number
        default: 80
      coverageThresholdTotal:
        required: false
        type: number
        default: 95
      useLocalCoverageConfig:
        required: false
        type: boolean
        default: false
      release_branch:
        required: false
        type: string
        default: 'main'
      repoVersionUpdate:
        required: false
        type: string
        default: 'platform-mesh/helm-charts'
      doubleTagging:
        required: false
        type: boolean
        default: false
      apiPackagePath:
        required: false
        type: string
        default: ''
    outputs:
      version:
        description: "The created Version"
        value: ${{ jobs.createVersion.outputs.version }}
  workflow_dispatch:
    inputs:
      imageTagName:
        required: true
        type: string
      useTask:
        required: false
        type: boolean
        default: false
      coverageThresholdFile:
        required: false
        type: number
        default: 80
      coverageThresholdPackage:
        required: false
        type: number
        default: 80
      coverageThresholdTotal:
        required: false
        type: number
        default: 95
      useLocalCoverageConfig:
        required: false
        type: boolean
        default: false
      release_branch:
        required: false
        type: string
        default: 'main'
      repoVersionUpdate:
        required: false
        type: string
        default: 'platform-mesh/helm-charts'


jobs:
  auto-labeler:
    if: ${{ (github.head_ref || github.ref) != format('refs/heads/{0}',inputs.release_branch) }}
    uses: ./.github/workflows/job-auto-labeler.yml
    secrets: inherit

  createVersion:
    if: ${{ (github.head_ref || github.ref) == format('refs/heads/{0}',inputs.release_branch) }}
    uses: ./.github/workflows/job-create-version.yml
    secrets: inherit
    with:
      apiPackagePath: ${{ inputs.apiPackagePath }}
  
  lint:
    uses: ./.github/workflows/job-golang-lint.yml
    with:
      useTask: ${{ inputs.useTask }}

  testSource:
    uses: ./.github/workflows/job-golang-test-source.yml
    secrets: inherit
    with:
      useTask: ${{ inputs.useTask }}
      useLocalCoverageConfig: ${{ inputs.useLocalCoverageConfig }}
      coverageThresholdFile: ${{ inputs.coverageThresholdFile }}
      coverageThresholdPackage: ${{ inputs.coverageThresholdPackage }}
      coverageThresholdTotal: ${{ inputs.coverageThresholdTotal }}

  dockerBuild:
    if: ${{ (github.head_ref || github.ref) != format('refs/heads/{0}',inputs.release_branch) }}
    uses: ./.github/workflows/job-docker-build-push.yml
    with:
      imageTagName: ${{ inputs.imageTagName }}
      release_branch: ${{ inputs.release_branch }}
      multiarch: false
    secrets: inherit

  dockerBuildAndPush:
    if: ${{ (github.head_ref || github.ref) == format('refs/heads/{0}',inputs.release_branch) }}
    needs: [createVersion,lint,testSource]
    uses: ./.github/workflows/job-docker-build-push.yml
    with:
      imageTagName: ${{ inputs.imageTagName }}
      version: ${{ needs.createVersion.outputs.version }}
      release_branch: ${{ inputs.release_branch }}
      multiarch: true
    secrets: inherit

  updateVersion:
    needs: [createVersion, dockerBuildAndPush]
    if: ${{ (github.head_ref || github.ref) == format('refs/heads/{0}',inputs.release_branch) }}
    uses: ./.github/workflows/job-chart-version-update.yml
    secrets: inherit
    with:
      appVersion: ${{ needs.createVersion.outputs.version }}
      chart: ${{ github.event.repository.name }}
      targetRepository: ${{ inputs.repoVersionUpdate }}
