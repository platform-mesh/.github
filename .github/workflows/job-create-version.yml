name: Create Version
on:
  workflow_call:
    inputs:
      prefix:
        description: 'The prefix to use for the version'
        required: false
        default: ''
        type: string
      apiPackagePath:
        required: false
        type: string
        default: ''
    outputs:
      version:
        description: The prepared Version
        value: ${{ jobs.version.outputs.version }}
      strictVersion:
        description: The prepared Strict Version
        value: ${{ jobs.version.outputs.strictVersion }}

jobs:
  # Creates a new semver to be used in the following workflow steps
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Set up repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}
      
      - name: Get next version
        id: semver
        uses: ietf-tools/semver-action@000ddb2ebacad350ff2a15382a344dc05ea4c0a4 # v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          majorList: BREAKING CHANGE, BREAKING, MAJOR
          minorList: FEATURE, Feature, feature, FEAT, Feat, feat
          patchList: FIX, Fix, fix, FIXED, Fixed, fixed, chore, config, conf, cofiguration, configure, build, chore, ci, rebuild, doc, docu, document, documentation, dependencies
          noNewCommitBehavior: patch
          noVersionBumpBehavior: patch
          skipInvalidTags: true
          prefix: ${{ inputs.prefix }}
      
      - name: Publish raw Tag
        if: ${{ !github.head_ref }}
        run: |
          git tag ${{ steps.semver.outputs.nextStrict }}
          if [ -n "${{ inputs.apiPackagePath }}" ]; then
            git tag "${{ inputs.apiPackagePath }}/${{ steps.semver.outputs.next }}"
          fi
          git push --tags

    outputs:
      version: ${{ steps.semver.outputs.next }}
      strictVersion: ${{ steps.semver.outputs.next }}
